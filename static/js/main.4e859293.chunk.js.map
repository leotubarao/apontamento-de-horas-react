{"version":3,"sources":["components/Header/index.js","store/reducers/index.js","store/reducers/times.js","store/index.js","store/actions/times.js","components/TimeList/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","combineReducers","times","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","Date","now","payload","filter","time","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","addTime","deleteTime","TimeList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","completaZeroEsquerda","numero","isHoraInicialMenorHoraFinal","firstTime","lastTime","splitFirstTime","split","splitLastTime","hIni","parseInt","hFim","mIni","mFim","somaHora","totalSomaHora","diffHours","bind","assertThisInitialized","handleSubmit","handleDeleteTime","catchPropsSumHoursWorked","aux","horasTotal","minutosTotal","event","preventDefault","setState","objectSpread","diffTime","reduce","anterior","atual","_this2","totalSH","_this3","onSubmit","for","onChange","e","target","value","scope","map","_ref","_ref$times","aria-label","onClick","aria-hidden","Component","connect","dispatch","bindActionCreators","TimeActions","App","components_Header","es","integration_react","loading","components_TimeList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uRAUeA,EARA,kBACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAA,4ECDGE,kBAAgB,CAC3BC,MCLW,WAAmC,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOC,MACX,IAAK,WACL,SAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAWP,GAAX,CAAkB,CAAES,GAAIC,KAAKC,MAAOZ,MAAOK,EAAOQ,QAAQb,SAC1D,IAAK,cACL,OAAOC,EAAMa,OAAO,SAAAC,GAAI,OAAIA,EAAKL,KAAOL,EAAOK,KAC/C,QACA,OAAOT,MCATe,EAAgB,CAClBC,IAAK,OACLC,aAGEC,EAAmBC,YAAeJ,EAAeK,GAEjDC,EAAQC,YAAYJ,GACpBK,EAAYC,YAAaH,gFCflBI,EAAU,SAAA1B,GAAK,MAAK,CAC7BM,KAAM,WACNO,QAAS,CAAEb,WAGF2B,EAAa,SAAAjB,GAAE,MAAK,CAC7BJ,KAAM,cACNI,OCDEkB,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,KAAAJ,IAClBE,EAAAtB,OAAAyB,EAAA,EAAAzB,CAAAwB,KAAAxB,OAAA0B,EAAA,EAAA1B,CAAAoB,GAAAO,KAAAH,KAAMH,KAaPO,qBAAuB,SAACC,GACvB,OAAQA,EAAS,GAAK,IAAMA,EAASA,GAfnBP,EAkBnBQ,4BAA8B,SAACC,EAAWC,GACzC,IAAIC,EAAiBF,EAAUG,MAAM,KACjCC,EAAgBH,EAASE,MAAM,KAE/BE,EAAOC,SAASJ,EAAe,GAAI,IACnCK,EAAOD,SAASF,EAAc,GAAI,IAEtC,GAAIC,IAASE,EACZ,OAAOF,EAAOE,EAEf,IAAIC,EAAOF,SAASJ,EAAe,GAAI,IACnCO,EAAOH,SAASF,EAAc,GAAI,IAEtC,OAAII,IAASC,EACLD,EAAOC,OADf,GA7BAlB,EAAK7B,MAAQ,CACZD,MAAO,GACPiD,SAAU,GACVC,cAAe,IAGhBpB,EAAKqB,UAAYrB,EAAKqB,UAAUC,KAAf5C,OAAA6C,EAAA,EAAA7C,CAAAsB,IACjBA,EAAKwB,aAAexB,EAAKwB,aAAaF,KAAlB5C,OAAA6C,EAAA,EAAA7C,CAAAsB,IACpBA,EAAKyB,iBAAmBzB,EAAKyB,iBAAiBH,KAAtB5C,OAAA6C,EAAA,EAAA7C,CAAAsB,IACxBA,EAAK0B,yBAA2B1B,EAAK0B,yBAAyBJ,KAA9B5C,OAAA6C,EAAA,EAAA7C,CAAAsB,IAXdA,yEAmCTS,EAAWC,GACpB,IAAKR,KAAKM,4BAA4BC,EAAWC,GAAW,CAC3D,IAAIiB,EAAMjB,EACVA,EAAWD,EACXA,EAAYkB,EAGb,IAAIb,EAAOL,EAAUG,MAAM,KACvBI,EAAON,EAASE,MAAM,KAEtBgB,EAAab,SAASC,EAAK,GAAI,IAAMD,SAASD,EAAK,GAAI,IACvDe,EAAed,SAASC,EAAK,GAAI,IAAMD,SAASD,EAAK,GAAI,IAO7D,OALIe,EAAe,IAClBA,GAAgB,GAChBD,GAAc,GAGR1B,KAAKI,qBAAqBsB,GAAc,IAAM1B,KAAKI,qBAAqBuB,gFAI7DC,gFAClBA,EAAMC,0BAEa7B,KAAKmB,UAAUnB,KAAK/B,MAAMD,MAAMuC,UAAWP,KAAK/B,MAAMD,MAAMwC,wBAAzEzB,kBAEAiB,KAAK8B,SAAS,CAAE9D,MAAMQ,OAAAuD,EAAA,EAAAvD,CAAA,GAAMwB,KAAK/B,MAAMD,MAAlB,CAAyBgE,SAAUjD,6BAExDiB,KAAKH,MAAMH,QAAQM,KAAK/B,MAAMD,+BAE9BgC,KAAK8B,SAAS,CAAE9D,MAAO,8BAEvBgC,KAAKwB,uTAKLxB,KAAK8B,SAAS,CAAEZ,cAAe,4BAEflB,KAAKH,MAAM7B,MAAMiE,OAAO,SAACC,EAAUC,GAExDD,EAAwB,IAAbA,EAAiB,CAAC,KAAM,MAAQA,EAASxB,MAAM,KAC1DyB,EAAQA,EAAMnE,MAAMgE,SAAStB,MAAM,KAEnC,IAAIgB,EAAab,SAASqB,EAAS,GAAI,IAAMrB,SAASsB,EAAM,GAAI,IAC5DR,EAAed,SAASqB,EAAS,GAAI,IAAMrB,SAASsB,EAAM,GAAI,IAOlE,OALIR,GAAgB,KACnBA,GAAgB,GAChBD,GAAc,GAGRU,EAAKhC,qBAAqBsB,GAAc,IAAMU,EAAKhC,qBAAqBuB,IAE7E,iBAfGU,kBAiBArC,KAAK8B,SAAS,CAAEZ,cAAemB,uLAIf3D,EAAIkD,0EAC1BA,EAAMC,0BAEA7B,KAAKH,MAAMF,WAAWjB,0BAEtBsB,KAAKwB,oSAILxB,KAAKwB,8JAGH,IAAAc,EAAAtC,KACR,OACCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,QAAM0E,SAAUvC,KAAKsB,cACpB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,SAAO2E,IAAI,aAAX,cACA7E,EAAAC,EAAAC,cAAA,SACCS,KAAK,OACLI,GAAG,YACHZ,UAAU,eACV2E,SAAU,SAAAC,GAAC,OAAIJ,EAAKR,SAAS,CAC5B9D,MAAMQ,OAAAuD,EAAA,EAAAvD,CAAA,GAAM8D,EAAKrE,MAAMD,MAAlB,CAAyBuC,UAAWmC,EAAEC,OAAOC,WAEnDA,MAAO5C,KAAK/B,MAAMD,MAAMuC,WAAa,OAIxC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,SAAO2E,IAAI,YAAX,QACA7E,EAAAC,EAAAC,cAAA,SACCS,KAAK,OACLI,GAAG,WACHZ,UAAU,eACV2E,SAAU,SAAAC,GAAC,OAAIJ,EAAKR,SAAS,CAC5B9D,MAAMQ,OAAAuD,EAAA,EAAAvD,CAAA,GAAM8D,EAAKrE,MAAMD,MAAlB,CAAyBwC,SAAUkC,EAAEC,OAAOC,WAElDA,MAAO5C,KAAK/B,MAAMD,MAAMwC,UAAY,QAKxC7C,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASR,UAAU,wBAAhC,WAGDH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,OAAV,aACAlF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,OAAV,cACAlF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,OAAV,qBACAlF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAM/E,UAAU,cAA1B,OAGFH,EAAAC,EAAAC,cAAA,aACEmC,KAAKH,MAAM7B,MAAM8E,IAAI,SAAAC,GAAA,IAAGrE,EAAHqE,EAAGrE,GAAHsE,EAAAD,EAAO/E,MAASuC,EAAhByC,EAAgBzC,UAAWC,EAA3BwC,EAA2BxC,SAAUwB,EAArCgB,EAAqChB,SAArC,OACrBrE,EAAAC,EAAAC,cAAA,MAAIoB,IAAKP,GACRf,EAAAC,EAAAC,cAAA,UAAK0C,GACL5C,EAAAC,EAAAC,cAAA,UAAK2C,GACL7C,EAAAC,EAAAC,cAAA,UAAKmE,GACLrE,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,OACTlF,EAAAC,EAAAC,cAAA,UACCS,KAAK,SACLR,UAAU,QACVmF,aAAW,QACXC,QAAS,SAAAR,GAAC,OAAIJ,EAAKf,iBAAiB7C,EAAIgE,KAExC/E,EAAAC,EAAAC,cAAA,QAAMsF,cAAY,QAAlB,eAONxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,sBAAyCH,EAAAC,EAAAC,cAAA,cAASmC,KAAK/B,MAAMiD,wBA/K1CkC,aA2LRC,cANS,SAAApF,GAAK,MAAK,CACjCD,MAAOC,EAAMD,QAGa,SAAAsF,GAAQ,OAAIC,YAAmBC,EAAaF,IAExDD,CAA6CzD,GC5K7C6D,EAXH,kBACX9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC6F,EAAD,MACA/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAUrE,MAAOA,GAChB3B,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CAAaC,QAAS,KAAMrE,UAAWA,GACtC7B,EAAAC,EAAAC,cAACiG,EAAD,gBCHgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4e859293.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => (\r\n    <div className=\"container mt-4\">\r\n        <div className=\"jumbotron bg-secondary text-white text-uppercase text-center\">\r\n            <h1>Calculadora de JOBS</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport times from \"./times\";\r\n\r\nexport default combineReducers({\r\n    times\r\n});","export default function times(state = [], action) {\r\n    switch (action.type) {\r\n        case \"ADD_TIME\":\r\n        return [...state, { id: Date.now(), times: action.payload.times }];\r\n        case \"DELETE_TIME\":\r\n        return state.filter(time => time.id !== action.id);\r\n        default:\r\n        return state;\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = createStore(persistedReducer);\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor};","export const addTime = times => ({\r\n    type: \"ADD_TIME\",\r\n    payload: { times }\r\n});\r\n\r\nexport const deleteTime = id => ({\r\n    type: \"DELETE_TIME\",\r\n    id\r\n});","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as TimeActions from \"../../store/actions/times\";\r\n\r\nclass TimeList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttimes: {},\r\n\t\t\tsomaHora: [],\r\n\t\t\ttotalSomaHora: ''\r\n\t\t};\r\n\r\n\t\tthis.diffHours = this.diffHours.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleDeleteTime = this.handleDeleteTime.bind(this);\r\n\t\tthis.catchPropsSumHoursWorked = this.catchPropsSumHoursWorked.bind(this);\r\n\t}\r\n\r\n\tcompletaZeroEsquerda = (numero) => {\r\n\t\treturn (numero < 10 ? \"0\" + numero : numero);\r\n\t}\r\n\r\n\tisHoraInicialMenorHoraFinal = (firstTime, lastTime) => {\r\n\t\tlet splitFirstTime = firstTime.split(':');\r\n\t\tlet splitLastTime = lastTime.split(':');\r\n\r\n\t\tlet hIni = parseInt(splitFirstTime[0], 10);\r\n\t\tlet hFim = parseInt(splitLastTime[0], 10);\r\n\r\n\t\tif (hIni !== hFim)\r\n\t\t\treturn hIni < hFim;\r\n\r\n\t\tlet mIni = parseInt(splitFirstTime[1], 10);\r\n\t\tlet mFim = parseInt(splitLastTime[1], 10);\r\n\r\n\t\tif (mIni !== mFim)\r\n\t\t\treturn mIni < mFim;\r\n\t}\r\n\r\n\tdiffHours(firstTime, lastTime) {\r\n\t\tif (!this.isHoraInicialMenorHoraFinal(firstTime, lastTime)) {\r\n\t\t\tlet aux = lastTime;\r\n\t\t\tlastTime = firstTime;\r\n\t\t\tfirstTime = aux;\r\n\t\t}\r\n\r\n\t\tlet hIni = firstTime.split(':');\r\n\t\tlet hFim = lastTime.split(':');\r\n\r\n\t\tlet horasTotal = parseInt(hFim[0], 10) - parseInt(hIni[0], 10);\r\n\t\tlet minutosTotal = parseInt(hFim[1], 10) - parseInt(hIni[1], 10);\r\n\r\n\t\tif (minutosTotal < 0) {\r\n\t\t\tminutosTotal += 60;\r\n\t\t\thorasTotal -= 1;\r\n\t\t}\r\n\r\n\t\treturn this.completaZeroEsquerda(horasTotal) + \":\" + this.completaZeroEsquerda(minutosTotal);\r\n\r\n\t}\r\n\r\n\tasync handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst time = await this.diffHours(this.state.times.firstTime, this.state.times.lastTime);\r\n\r\n\t\tawait this.setState({ times: { ...this.state.times, diffTime: time } });\r\n\r\n\t\tawait this.props.addTime(this.state.times);\r\n\r\n\t\tawait this.setState({ times: {} });\r\n\r\n\t\tawait this.catchPropsSumHoursWorked();\r\n\t};\r\n\r\n\tasync catchPropsSumHoursWorked() {\r\n\r\n\t\tawait this.setState({ totalSomaHora: '' });\r\n\r\n\t\tconst totalSH = await this.props.times.reduce((anterior, atual) => {\r\n\r\n\t\t\tanterior = anterior === 0 ? ['00', '00'] : anterior.split(':');\r\n\t\t\tatual = atual.times.diffTime.split(':');\r\n\r\n\t\t\tlet horasTotal = parseInt(anterior[0], 10) + parseInt(atual[0], 10);\r\n\t\t\tlet minutosTotal = parseInt(anterior[1], 10) + parseInt(atual[1], 10);\r\n\r\n\t\t\tif (minutosTotal >= 60) {\r\n\t\t\t\tminutosTotal -= 60;\r\n\t\t\t\thorasTotal += 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.completaZeroEsquerda(horasTotal) + \":\" + this.completaZeroEsquerda(minutosTotal);\r\n\r\n\t\t}, 0);\r\n\r\n\t\tawait this.setState({ totalSomaHora: totalSH });\r\n\r\n\t}\r\n\r\n\tasync handleDeleteTime(id, event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tawait this.props.deleteTime(id);\r\n\r\n\t\tawait this.catchPropsSumHoursWorked();\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait this.catchPropsSumHoursWorked();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"firstTime\">Início:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\t\t\t\t\tid=\"firstTime\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.setState({\r\n\t\t\t\t\t\t\t\t\t\ttimes: { ...this.state.times, firstTime: e.target.value }\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.times.firstTime || ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"lastTime\">Fim:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\t\t\t\t\tid=\"lastTime\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.setState({\r\n\t\t\t\t\t\t\t\t\t\ttimes: { ...this.state.times, lastTime: e.target.value }\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.times.lastTime || ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary mt-3\">Salvar</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<table className=\"table mt-5\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Início</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Término</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\">Horas Trabalhadas</th>\r\n\t\t\t\t\t\t\t<th scope=\"col\" className=\"text-right\">#</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.props.times.map(({ id, times: { firstTime, lastTime, diffTime } }) => (\r\n\t\t\t\t\t\t\t<tr key={id}>\r\n\t\t\t\t\t\t\t\t<td>{firstTime}</td>\r\n\t\t\t\t\t\t\t\t<td>{lastTime}</td>\r\n\t\t\t\t\t\t\t\t<td>{diffTime}</td>\r\n\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"close\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Close\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.handleDeleteTime(id, e)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<div className=\"mb-3\">Horas trabalhadas: <strong>{this.state.totalSomaHora}</strong></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\ttimes: state.times\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(TimeActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeList);\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport Header from './components/Header';\n\nimport { store, persistor } from \"./store\";\nimport TimeList from \"./components/TimeList\";\n\n\nconst App = () => (\n\t<div className=\"App\">\n\t\t<Header />\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t<TimeList />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}